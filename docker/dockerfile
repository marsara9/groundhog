FROM python:3-slim AS compile
# Install required software
RUN apt-get update
RUN apt-get install -y \
    build-essential \
    curl

# Setup user and permissions
RUN useradd -m dockeruser
USER dockeruser
ENV HOME /home/dockeruser

# Install user specific software
## Rust is required by bcrypt
RUN curl https://sh.rustup.rs -sSf | bash -s -- -y --profile minimal
ENV PATH="${HOME}/.cargo/bin:${PATH}"
RUN pip3 install simplejson bcrypt nmcli --verbose --no-warn-script-location

#FROM gcr.io/distroless/python3-debian11
FROM python:3-slim

RUN apt-get update
RUN apt-get install -y --no-install-recommends \
    net-tools \
    network-manager

RUN useradd -m dockeruser
RUN usermod -aG sudo dockeruser
ENV HOME /home/dockeruser

# Copy dependencies
## Python packages
COPY --from=compile "${HOME}/.local/lib/python3.11/site-packages/bcrypt" "${HOME}/.local/lib/python3.11/site-packages/bcrypt"
COPY --from=compile "${HOME}/.local/lib/python3.11/site-packages/nmcli" "${HOME}/.local/lib/python3.11/site-packages/nmcli"
COPY --from=compile "${HOME}/.local/lib/python3.11/site-packages/simplejson" "${HOME}/.local/lib/python3.11/site-packages/simplejson"

# Create driectory structure
WORKDIR /router
RUN bash -c 'mkdir -p database/{users,config}'
COPY ui/ ui/
COPY server/ server/

RUN chown -R dockeruser /router
USER dockeruser

# Start the server
EXPOSE 8080
ENTRYPOINT ["python3", "-u", "server/vpnrouter.py"]
