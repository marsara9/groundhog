FROM python:3-slim AS build

# Install build software
RUN apt-get update
RUN apt-get install -y --no-install-recommends \
    build-essential \
    git \
    zlib1g-dev \
    curl

WORKDIR /build
COPY server/ server/

# Setup user and permissions
RUN useradd -m builduser
RUN chown -R builduser /build
USER builduser
ENV HOME="/home/builduser"

# Install user specific software
## Rust is required by bcrypt
ENV PATH="${HOME}/.cargo/bin:${PATH}"
RUN curl https://sh.rustup.rs -sSf | bash -s -- -y --profile minimal

# Install Python dependencies
RUN pip3 install --verbose --no-warn-script-location --no-cache-dir \
    simplejson \
    bcrypt \
    nmcli

# Install PyInstaller
RUN pip3 install pyinstaller --verbose --no-warn-script-location --no-cache-dir || \
    ( git clone https://github.com/pyinstaller/pyinstaller && \
    cd pyinstaller/bootloader && \
    python3 ./waf distclean all && \
    cd ../ && \
    python3 setup.py install --user )

RUN /home/builduser/.local/bin/pyinstaller --onefile --python-option u server/vpnrouter.py

FROM debian:stable-slim

# Install required software
RUN apt-get update
RUN apt-get install -y --no-install-recommends \
    net-tools \
    network-manager

# Create driectory structure
WORKDIR /router
COPY ui/ ui/

COPY --from=build /build/dist/vpnrouter server/

RUN useradd -m dockeruser
RUN usermod -aG sudo dockeruser
RUN chown -R dockeruser /router

# Start the server
EXPOSE 8080
ENTRYPOINT [ "./server/vpnrouter" ]
