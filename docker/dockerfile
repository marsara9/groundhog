FROM debian:stable-slim AS deps
RUN cd /tmp && \
    apt-get update && \
    apt-get download $(apt-cache depends --recurse --no-recommends --no-suggests \
        --no-conflicts --no-breaks --no-replaces --no-enhances \
        --no-pre-depends network-manager isc-dhcp-server grep libzstd1 | grep "^\w") && \
    mkdir /dpkg && \
    for deb in *.deb; do dpkg --extract $deb /dpkg || exit 10; done

FROM python:3-slim AS build

# Install build software
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential git zlib1g-dev curl

WORKDIR /build
COPY server/ server/

# Setup user and permissions
RUN useradd -m builduser
RUN chown -R builduser /build
USER builduser
ENV HOME="/home/builduser"

# Install user specific software
## Rust is required by bcrypt
ENV SHELL "/bin/sh"
ENV PATH="${HOME}/.cargo/bin:${PATH}"
#RUN curl https://sh.rustup.rs -sSf | bash -s -- -y --profile minimal
RUN --security=insecure curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sed 's#/proc/self/exe#$SHELL#g' | sh -s -- -y --profile minimal
# Install Python dependencies
RUN pip3 install --verbose --no-warn-script-location --no-cache-dir \
        simplejson bcrypt nmcli pydhcpdparser

# Install PyInstaller
RUN pip3 install pyinstaller --verbose --no-warn-script-location --no-cache-dir || \
    pip3 install git+https://github.com/pyinstaller/pyinstaller

RUN /home/builduser/.local/bin/pyinstaller --onefile --python-option u server/server.py

FROM gcr.io/distroless/static-debian11:debug
# FROM gcr.io/distroless/static-debian11:latest

COPY --from=deps /usr/bin/awk /usr/bin/awk
COPY --from=deps /dpkg /

# Create driectory structure
WORKDIR /router
COPY ui/ ui/

COPY --from=build /build/dist/server bin/

# Start the server
EXPOSE 8080
ENTRYPOINT [ "./bin/server" ]
