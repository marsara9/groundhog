# syntax=docker/dockerfile:experimental
FROM debian:stable-slim AS deps
RUN cd /tmp && \
    apt-get update && \
    apt-get download $(apt-cache depends --recurse --no-recommends --no-suggests \
        --no-conflicts --no-breaks --no-replaces --no-enhances \
        --no-pre-depends network-manager isc-dhcp-server grep libzstd1 | grep "^\w") && \
    mkdir /dpkg && \
    for deb in *.deb; do dpkg --extract $deb /dpkg || exit 10; done

FROM python:3-slim AS build

# Install build software
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential git zlib1g-dev curl

WORKDIR /build
COPY server/ server/

COPY docker/install-bcrypt.sh .
RUN chmod +x install-bcrypt.sh

# Setup user and permissions
# RUN useradd -m -G root -d "/home/builduser" builduser
# RUN chown -R builduser /build
# USER builduser
# ENV HOME="/home/builduser"
ENV HOME="/root"

ARG TARGETPLATFORM

# Install user specific software
RUN --security=insecure ./install-bcrypt.sh $TARGETPLATFORM
RUN pip3 install --verbose --no-warn-script-location --no-cache-dir --user \
        simplejson nmcli pydhcpdparser

# Install PyInstaller
RUN pip3 install pyinstaller --verbose --no-warn-script-location --no-cache-dir || \
    pip3 install git+https://github.com/pyinstaller/pyinstaller

RUN pyinstaller --onefile --python-option u server/server.py

FROM gcr.io/distroless/static-debian11:debug
# FROM gcr.io/distroless/static-debian11:latest

COPY --from=deps /usr/bin/awk /usr/bin/awk
COPY --from=deps /dpkg /

# Create driectory structure
WORKDIR /router
COPY ui/ ui/

COPY --from=build /build/dist/server bin/

# Start the server
EXPOSE 8080
ENTRYPOINT [ "./bin/server" ]
