FROM python:3-slim AS build

# Install build software
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        git \
        zlib1g-dev \
        curl

WORKDIR /build
COPY server/ server/

# Setup user and permissions
RUN useradd -m builduser
RUN chown -R builduser /build
USER builduser
ENV HOME="/home/builduser"

# Install user specific software
## Rust is required by bcrypt
ENV PATH="${HOME}/.cargo/bin:${PATH}"
RUN curl https://sh.rustup.rs -sSf | bash -s -- -y --profile minimal

# Install Python dependencies
RUN pip3 install --verbose --no-warn-script-location --no-cache-dir \
        simplejson \
        bcrypt \
        nmcli

# Install PyInstaller
RUN pip3 install pyinstaller --verbose --no-warn-script-location --no-cache-dir || \
    ( \
        pip install git+https://github.com/pyinstaller/pyinstaller || \
        ( \
            git clone https://github.com/pyinstaller/pyinstaller && \
            cd pyinstaller/bootloader && \
            python3 ./waf distclean all && \
            cd ../ && \
            pip3 install . \
        ) \
    )

RUN /home/builduser/.local/bin/pyinstaller --onefile --python-option u server/server.py

FROM debian:stable-slim

# Install required software
RUN apt-get update && \
    apt-get install -y --no-install-recommends network-manager && \
    rm -rf /var/lib/apt/lists/*

# Create driectory structure
WORKDIR /router
COPY ui/ ui/

COPY --from=build /build/dist/server server/

# Create user
RUN useradd -m dockeruser && \
    usermod -aG sudo dockeruser && \
    chown -R dockeruser /router

# Start the server
EXPOSE 8080
ENTRYPOINT [ "./server/server" ]
